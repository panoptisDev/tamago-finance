{
  "contractName": "MockToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "faucet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/kantapatchankasem/Work/tamago/tamago-finance/contractV2/contracts/mocks/MockToken.sol\":\"MockToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/kantapatchankasem/Work/tamago/tamago-finance/contractV2/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7521d73c0b2001a87ce17fdc3ff40191c0b7893b0c48a695011d615d8fda254f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e2574c57b1cd86bb792748ad24bc1d7d62cce413f18d029a0217456926b067\",\"dweb:/ipfs/QmUuF5cqnokP3MAQtu4VKnewB8F5tycbvmAqbgEuQu7tTt\"]},\"/Users/kantapatchankasem/Work/tamago/tamago-finance/contractV2/contracts/mocks/MockToken.sol\":{\"keccak256\":\"0xcc1437e9c0b19f5a8fd7111373c43da5ba2a164f0ccffbdb5ec0db63d987fec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f2f8cce1b7574fba409d2675fc8368a8215aa6997ab18fb3074f9137f15e57a\",\"dweb:/ipfs/QmbUu8JGkuXmgY5LmRdLCp7ZCWtVWGyZUk3kBcTrdEoSEq\"]},\"/Users/kantapatchankasem/Work/tamago/tamago-finance/contractV2/contracts/utility/ERC20.sol\":{\"keccak256\":\"0xb9a6911564fd3c75e38e3364cf6c33723d47394716d31662f27a682c2674711d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d951b626c4216392edebc7520ff091b84add8015eb8651964148830b67f5e22a\",\"dweb:/ipfs/QmNxkyAypV6SJbWaX4KveTK2b8aiBoqEBg88ZZRwa7scdX\"]},\"/Users/kantapatchankasem/Work/tamago/tamago-finance/contractV2/contracts/utility/SafeMath.sol\":{\"keccak256\":\"0xd519c5bc4f6263d68bd5523f4f7fdeeba1331ac262cc08497816d375ba9d2721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93bd7b91c3e8a003101b7791b70d08751ac5be2271b7a9d03690bcf0f0cd7404\",\"dweb:/ipfs/QmfJaU2uCbaF99aMLHDi9vxZN2iR68zcs8XPaudFSF1JRs\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000f2c38038062000f2c833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b50604052505082518391508290620001b890600390602085019062000373565b508051620001ce90600490602084019062000373565b50506005805460ff1916601217905550620001f5336a084595161401484a000000620001fd565b50506200040f565b6001600160a01b03821662000259576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b62000267600083836200030c565b62000283816002546200031160201b6200059e1790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620002b69183906200059e62000311821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b6000828201838110156200036c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003b657805160ff1916838001178555620003e6565b82800160010185558215620003e6579182015b82811115620003e6578251825591602001919060010190620003c9565b50620003f4929150620003f8565b5090565b5b80821115620003f45760008155600101620003f9565b610b0d806200041f6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461021057806395d89b4114610236578063a457c2d71461023e578063a9059cbb1461026a578063dd62ed3e14610296578063de5f72fd146102c4576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101e4575b600080fd5b6100c16102ce565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610364565b604080519115158252519081900360200190f35b61017e610381565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b03813581169160208101359091169060400135610387565b6101ce61040e565b6040805160ff9092168252519081900360200190f35b610162600480360360408110156101fa57600080fd5b506001600160a01b038135169060200135610417565b61017e6004803603602081101561022657600080fd5b50356001600160a01b0316610465565b6100c1610480565b6101626004803603604081101561025457600080fd5b506001600160a01b0381351690602001356104e1565b6101626004803603604081101561028057600080fd5b506001600160a01b038135169060200135610549565b61017e600480360360408110156102ac57600080fd5b506001600160a01b038135811691602001351661055d565b6102cc610588565b005b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561035a5780601f1061032f5761010080835404028352916020019161035a565b820191906000526020600020905b81548152906001019060200180831161033d57829003601f168201915b5050505050905090565b60006103786103716105ff565b8484610603565b50600192915050565b60025490565b60006103948484846106ef565b610404846103a06105ff565b6103ff85604051806060016040528060288152602001610a42602891396001600160a01b038a166000908152600160205260408120906103de6105ff565b6001600160a01b03168152602081019190915260400160002054919061084a565b610603565b5060019392505050565b60055460ff1690565b60006103786104246105ff565b846103ff85600160006104356105ff565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061059e565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561035a5780601f1061032f5761010080835404028352916020019161035a565b60006103786104ee6105ff565b846103ff85604051806060016040528060258152602001610ab360259139600160006105186105ff565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061084a565b60006103786105566105ff565b84846106ef565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61059c3369021e19e0c9bab24000006108e1565b565b6000828201838110156105f8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b0383166106485760405162461bcd60e51b8152600401808060200182810382526024815260200180610a8f6024913960400191505060405180910390fd5b6001600160a01b03821661068d5760405162461bcd60e51b81526004018080602001828103825260228152602001806109fa6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166107345760405162461bcd60e51b8152600401808060200182810382526025815260200180610a6a6025913960400191505060405180910390fd5b6001600160a01b0382166107795760405162461bcd60e51b81526004018080602001828103825260238152602001806109d76023913960400191505060405180910390fd5b6107848383836109d1565b6107c181604051806060016040528060268152602001610a1c602691396001600160a01b038616600090815260208190526040902054919061084a565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107f0908261059e565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108d95760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561089e578181015183820152602001610886565b50505050905090810190601f1680156108cb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b03821661093c576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610948600083836109d1565b600254610955908261059e565b6002556001600160a01b03821660009081526020819052604090205461097b908261059e565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220da3faac4d3e4e0993042e5b2d3b54112f072f1a7585ab17e039fe78ff016dc2f64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461021057806395d89b4114610236578063a457c2d71461023e578063a9059cbb1461026a578063dd62ed3e14610296578063de5f72fd146102c4576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101e4575b600080fd5b6100c16102ce565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610364565b604080519115158252519081900360200190f35b61017e610381565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b03813581169160208101359091169060400135610387565b6101ce61040e565b6040805160ff9092168252519081900360200190f35b610162600480360360408110156101fa57600080fd5b506001600160a01b038135169060200135610417565b61017e6004803603602081101561022657600080fd5b50356001600160a01b0316610465565b6100c1610480565b6101626004803603604081101561025457600080fd5b506001600160a01b0381351690602001356104e1565b6101626004803603604081101561028057600080fd5b506001600160a01b038135169060200135610549565b61017e600480360360408110156102ac57600080fd5b506001600160a01b038135811691602001351661055d565b6102cc610588565b005b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561035a5780601f1061032f5761010080835404028352916020019161035a565b820191906000526020600020905b81548152906001019060200180831161033d57829003601f168201915b5050505050905090565b60006103786103716105ff565b8484610603565b50600192915050565b60025490565b60006103948484846106ef565b610404846103a06105ff565b6103ff85604051806060016040528060288152602001610a42602891396001600160a01b038a166000908152600160205260408120906103de6105ff565b6001600160a01b03168152602081019190915260400160002054919061084a565b610603565b5060019392505050565b60055460ff1690565b60006103786104246105ff565b846103ff85600160006104356105ff565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061059e565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561035a5780601f1061032f5761010080835404028352916020019161035a565b60006103786104ee6105ff565b846103ff85604051806060016040528060258152602001610ab360259139600160006105186105ff565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061084a565b60006103786105566105ff565b84846106ef565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61059c3369021e19e0c9bab24000006108e1565b565b6000828201838110156105f8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b0383166106485760405162461bcd60e51b8152600401808060200182810382526024815260200180610a8f6024913960400191505060405180910390fd5b6001600160a01b03821661068d5760405162461bcd60e51b81526004018080602001828103825260228152602001806109fa6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166107345760405162461bcd60e51b8152600401808060200182810382526025815260200180610a6a6025913960400191505060405180910390fd5b6001600160a01b0382166107795760405162461bcd60e51b81526004018080602001828103825260238152602001806109d76023913960400191505060405180910390fd5b6107848383836109d1565b6107c181604051806060016040528060268152602001610a1c602691396001600160a01b038616600090815260208190526040902054919061084a565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107f0908261059e565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108d95760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561089e578181015183820152602001610886565b50505050905090810190601f1680156108cb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b03821661093c576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610948600083836109d1565b600254610955908261059e565b6002556001600160a01b03821660009081526020819052604090205461097b908261059e565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220da3faac4d3e4e0993042e5b2d3b54112f072f1a7585ab17e039fe78ff016dc2f64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "90:283:19:-:0;;;124:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;124:160:19;;;;;;;;;;-1:-1:-1;124:160:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;124:160:19;;;;;;;;;;-1:-1:-1;124:160:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;124:160:19;;-1:-1:-1;;2120:12:22;;213:4:19;;-1:-1:-1;219:6:19;;2120:12:22;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;2142:16:22;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2168:9:22;:14;;-1:-1:-1;;2168:14:22;2180:2;2168:14;;;-1:-1:-1;237:40:19::1;243:10;255:21;237:5;:40::i;:::-;124:160:::0;;90:283;;7870:370:22;-1:-1:-1;;;;;7953:21:22;;7945:65;;;;;-1:-1:-1;;;7945:65:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;8021:49;8050:1;8054:7;8063:6;8021:20;:49::i;:::-;8096:24;8113:6;8096:12;;:16;;;;;;:24;;;;:::i;:::-;8081:12;:39;-1:-1:-1;;;;;8151:18:22;;:9;:18;;;;;;;;;;;;:30;;8174:6;;8151:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8130:18:22;;:9;:18;;;;;;;;;;;:51;;;;8196:37;;;;;;;8130:18;;:9;;8196:37;;;;;;;;;;7870:370;;:::o;10732:92::-;;;;:::o;867:176:28:-;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:1;867:176;-1:-1:-1;;;867:176:28:o;90:283:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;90:283:19;;;-1:-1:-1;90:283:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "90:283:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4290:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4290:166:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3297:98;;;:::i;:::-;;;;;;;;;;;;;;;;4916:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4916:317:22;;;;;;;;;;;;;;;;;:::i;3156:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5628:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5628:215:22;;;;;;;;:::i;3453:117::-;;;;;;;;;;;;;;;;-1:-1:-1;3453:117:22;-1:-1:-1;;;;;3453:117:22;;:::i;2448:85::-;;;:::i;6330:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6330:266:22;;;;;;;;:::i;3773:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3773:172:22;;;;;;;;:::i;4003:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4003:149:22;;;;;;;;;;:::i;291:79:19:-;;;:::i;:::-;;2254:81:22;2323:5;2316:12;;;;;;;;-1:-1:-1;;2316:12:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2291:13;;2316:12;;2323:5;;2316:12;;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81;:::o;4290:166::-;4373:4;4389:39;4398:12;:10;:12::i;:::-;4412:7;4421:6;4389:8;:39::i;:::-;-1:-1:-1;4445:4:22;4290:166;;;;:::o;3297:98::-;3376:12;;3297:98;:::o;4916:317::-;5022:4;5038:36;5048:6;5056:9;5067:6;5038:9;:36::i;:::-;5084:121;5093:6;5101:12;:10;:12::i;:::-;5115:89;5153:6;5115:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5115:19:22;;;;;;:11;:19;;;;;;5135:12;:10;:12::i;:::-;-1:-1:-1;;;;;5115:33:22;;;;;;;;;;;;-1:-1:-1;5115:33:22;;;:89;:37;:89::i;:::-;5084:8;:121::i;:::-;-1:-1:-1;5222:4:22;4916:317;;;;;:::o;3156:81::-;3221:9;;;;3156:81;:::o;5628:215::-;5716:4;5732:83;5741:12;:10;:12::i;:::-;5755:7;5764:50;5803:10;5764:11;:25;5776:12;:10;:12::i;:::-;-1:-1:-1;;;;;5764:25:22;;;;;;;;;;;;;;;;;-1:-1:-1;5764:25:22;;;:34;;;;;;;;;;;:38;:50::i;3453:117::-;-1:-1:-1;;;;;3545:18:22;3519:7;3545:18;;;;;;;;;;;;3453:117::o;2448:85::-;2519:7;2512:14;;;;;;;;-1:-1:-1;;2512:14:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2487:13;;2512:14;;2519:7;;2512:14;;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;6330:266;6423:4;6439:129;6448:12;:10;:12::i;:::-;6462:7;6471:96;6510:15;6471:96;;;;;;;;;;;;;;;;;:11;:25;6483:12;:10;:12::i;:::-;-1:-1:-1;;;;;6471:25:22;;;;;;;;;;;;;;;;;-1:-1:-1;6471:25:22;;;:34;;;;;;;;;;;:96;:38;:96::i;3773:172::-;3859:4;3875:42;3885:12;:10;:12::i;:::-;3899:9;3910:6;3875:9;:42::i;4003:149::-;-1:-1:-1;;;;;4118:18:22;;;4092:7;4118:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4003:149::o;291:79:19:-;326:37;332:10;344:18;326:5;:37::i;:::-;291:79::o;867:176:28:-;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:1;867:176;-1:-1:-1;;;867:176:28:o;598:104:63:-;685:10;598:104;:::o;9394:340:22:-;-1:-1:-1;;;;;9495:19:22;;9487:68;;;;-1:-1:-1;;;9487:68:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9573:21:22;;9565:68;;;;-1:-1:-1;;;9565:68:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9644:18:22;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9695:32;;;;;;;;;;;;;;;;;9394:340;;;:::o;7070:530::-;-1:-1:-1;;;;;7175:20:22;;7167:70;;;;-1:-1:-1;;;7167:70:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7255:23:22;;7247:71;;;;-1:-1:-1;;;7247:71:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7329:47;7350:6;7358:9;7369:6;7329:20;:47::i;:::-;7407:71;7429:6;7407:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7407:17:22;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7387:17:22;;;:9;:17;;;;;;;;;;;:91;;;;7511:20;;;;;;;:32;;7536:6;7511:24;:32::i;:::-;-1:-1:-1;;;;;7488:20:22;;;:9;:20;;;;;;;;;;;;:55;;;;7558:35;;;;;;;7488:20;;7558:35;;;;;;;;;;;;;7070:530;;;:::o;1765:187:28:-;1851:7;1886:12;1878:6;;;;1870:29;;;;-1:-1:-1;;;1870:29:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1921:5:28;;;1765:187::o;7870:370:22:-;-1:-1:-1;;;;;7953:21:22;;7945:65;;;;;-1:-1:-1;;;7945:65:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;8021:49;8050:1;8054:7;8063:6;8021:20;:49::i;:::-;8096:12;;:24;;8113:6;8096:16;:24::i;:::-;8081:12;:39;-1:-1:-1;;;;;8151:18:22;;:9;:18;;;;;;;;;;;:30;;8174:6;8151:22;:30::i;:::-;-1:-1:-1;;;;;8130:18:22;;:9;:18;;;;;;;;;;;:51;;;;8196:37;;;;;;;8130:18;;:9;;8196:37;;;;;;;;;;7870:370;;:::o;10732:92::-;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\nimport \"../utility/ERC20.sol\";\n\ncontract MockToken is ERC20 {\n    constructor(\n        string memory name,\n        string memory symbol\n    ) public ERC20(name, symbol) {\n        _mint(msg.sender, 10000000 * (10 ** 18));\n    }\n\n\n    function faucet() public {\n        _mint(msg.sender, 10000 * (10 ** 18));\n    }\n\n}",
  "sourcePath": "/Users/kantapatchankasem/Work/tamago/tamago-finance/contractV2/contracts/mocks/MockToken.sol",
  "ast": {
    "absolutePath": "/Users/kantapatchankasem/Work/tamago/tamago-finance/contractV2/contracts/mocks/MockToken.sol",
    "exportedSymbols": {
      "MockToken": [
        5761
      ]
    },
    "id": 5762,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5719,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:19"
      },
      {
        "absolutePath": "/Users/kantapatchankasem/Work/tamago/tamago-finance/contractV2/contracts/utility/ERC20.sol",
        "file": "../utility/ERC20.sol",
        "id": 5720,
        "nodeType": "ImportDirective",
        "scope": 5762,
        "sourceUnit": 7134,
        "src": "58:30:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5721,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7133,
              "src": "112:5:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$7133",
                "typeString": "contract ERC20"
              }
            },
            "id": 5722,
            "nodeType": "InheritanceSpecifier",
            "src": "112:5:19"
          }
        ],
        "contractDependencies": [
          4755,
          7133,
          14590
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5761,
        "linearizedBaseContracts": [
          5761,
          7133,
          4755,
          14590
        ],
        "name": "MockToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5744,
              "nodeType": "Block",
              "src": "227:57:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5734,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "243:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "243:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000"
                        },
                        "id": 5741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130303030303030",
                          "id": 5736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "255:8:19",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000_by_1",
                            "typeString": "int_const 10000000"
                          },
                          "value": "10000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 5739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 5737,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "267:2:19",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3138",
                                "id": 5738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "273:2:19",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "267:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 5740,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "266:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "255:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000"
                        }
                      ],
                      "id": 5733,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7009,
                      "src": "237:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "237:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5743,
                  "nodeType": "ExpressionStatement",
                  "src": "237:40:19"
                }
              ]
            },
            "documentation": null,
            "id": 5745,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5729,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5724,
                    "src": "213:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5730,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5726,
                    "src": "219:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 5731,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5728,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7133,
                  "src": "207:5:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$7133_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "207:19:19"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5724,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5745,
                  "src": "145:18:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5723,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "145:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5726,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5745,
                  "src": "173:20:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5725,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "173:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "135:64:19"
            },
            "returnParameters": {
              "id": 5732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "227:0:19"
            },
            "scope": 5761,
            "src": "124:160:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5759,
              "nodeType": "Block",
              "src": "316:54:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5749,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "332:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "332:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "id": 5756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130303030",
                          "id": 5751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "344:5:19",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 5754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 5752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "353:2:19",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3138",
                                "id": 5753,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "359:2:19",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "353:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 5755,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "352:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "344:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "id": 5748,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7009,
                      "src": "326:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "326:37:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5758,
                  "nodeType": "ExpressionStatement",
                  "src": "326:37:19"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "de5f72fd",
            "id": 5760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "faucet",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:2:19"
            },
            "returnParameters": {
              "id": 5747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:0:19"
            },
            "scope": 5761,
            "src": "291:79:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5762,
        "src": "90:283:19"
      }
    ],
    "src": "33:340:19"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/kantapatchankasem/Work/tamago/tamago-finance/contractV2/contracts/mocks/MockToken.sol",
      "exportedSymbols": {
        "MockToken": [
          5761
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.6",
            ".12"
          ]
        },
        "id": 5719,
        "name": "PragmaDirective",
        "src": "33:23:19"
      },
      {
        "attributes": {
          "SourceUnit": 7134,
          "absolutePath": "/Users/kantapatchankasem/Work/tamago/tamago-finance/contractV2/contracts/utility/ERC20.sol",
          "file": "../utility/ERC20.sol",
          "scope": 5762,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 5720,
        "name": "ImportDirective",
        "src": "58:30:19"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            4755,
            7133,
            14590
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            5761,
            7133,
            4755,
            14590
          ],
          "name": "MockToken",
          "scope": 5762
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20",
                  "referencedDeclaration": 7133,
                  "type": "contract ERC20"
                },
                "id": 5721,
                "name": "UserDefinedTypeName",
                "src": "112:5:19"
              }
            ],
            "id": 5722,
            "name": "InheritanceSpecifier",
            "src": "112:5:19"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 5761,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "name",
                      "overrides": null,
                      "scope": 5745,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 5723,
                        "name": "ElementaryTypeName",
                        "src": "145:6:19"
                      }
                    ],
                    "id": 5724,
                    "name": "VariableDeclaration",
                    "src": "145:18:19"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "symbol",
                      "overrides": null,
                      "scope": 5745,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 5725,
                        "name": "ElementaryTypeName",
                        "src": "173:6:19"
                      }
                    ],
                    "id": 5726,
                    "name": "VariableDeclaration",
                    "src": "173:20:19"
                  }
                ],
                "id": 5727,
                "name": "ParameterList",
                "src": "135:64:19"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 5732,
                "name": "ParameterList",
                "src": "227:0:19"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7133,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 5728,
                    "name": "Identifier",
                    "src": "207:5:19"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5724,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 5729,
                    "name": "Identifier",
                    "src": "213:4:19"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5726,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 5730,
                    "name": "Identifier",
                    "src": "219:6:19"
                  }
                ],
                "id": 5731,
                "name": "ModifierInvocation",
                "src": "207:19:19"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                                  "typeString": "int_const 10000000000000000000000000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7009,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 5733,
                            "name": "Identifier",
                            "src": "237:5:19"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 5734,
                                "name": "Identifier",
                                "src": "243:3:19"
                              }
                            ],
                            "id": 5735,
                            "name": "MemberAccess",
                            "src": "243:10:19"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000000000"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "int_const 10000000000000000000000000"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3130303030303030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 10000000",
                                  "value": "10000000"
                                },
                                "id": 5736,
                                "name": "Literal",
                                "src": "255:8:19"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "int_const 1000000000000000000"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "operator": "**",
                                      "type": "int_const 1000000000000000000"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3130",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 10",
                                          "value": "10"
                                        },
                                        "id": 5737,
                                        "name": "Literal",
                                        "src": "267:2:19"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3138",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 18",
                                          "value": "18"
                                        },
                                        "id": 5738,
                                        "name": "Literal",
                                        "src": "273:2:19"
                                      }
                                    ],
                                    "id": 5739,
                                    "name": "BinaryOperation",
                                    "src": "267:8:19"
                                  }
                                ],
                                "id": 5740,
                                "name": "TupleExpression",
                                "src": "266:10:19"
                              }
                            ],
                            "id": 5741,
                            "name": "BinaryOperation",
                            "src": "255:21:19"
                          }
                        ],
                        "id": 5742,
                        "name": "FunctionCall",
                        "src": "237:40:19"
                      }
                    ],
                    "id": 5743,
                    "name": "ExpressionStatement",
                    "src": "237:40:19"
                  }
                ],
                "id": 5744,
                "name": "Block",
                "src": "227:57:19"
              }
            ],
            "id": 5745,
            "name": "FunctionDefinition",
            "src": "124:160:19"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "de5f72fd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "faucet",
              "overrides": null,
              "scope": 5761,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 5746,
                "name": "ParameterList",
                "src": "306:2:19"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 5747,
                "name": "ParameterList",
                "src": "316:0:19"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                                  "typeString": "int_const 10000000000000000000000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7009,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 5748,
                            "name": "Identifier",
                            "src": "326:5:19"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 5749,
                                "name": "Identifier",
                                "src": "332:3:19"
                              }
                            ],
                            "id": 5750,
                            "name": "MemberAccess",
                            "src": "332:10:19"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000000"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "int_const 10000000000000000000000"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3130303030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 10000",
                                  "value": "10000"
                                },
                                "id": 5751,
                                "name": "Literal",
                                "src": "344:5:19"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "int_const 1000000000000000000"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "operator": "**",
                                      "type": "int_const 1000000000000000000"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3130",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 10",
                                          "value": "10"
                                        },
                                        "id": 5752,
                                        "name": "Literal",
                                        "src": "353:2:19"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "3138",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 18",
                                          "value": "18"
                                        },
                                        "id": 5753,
                                        "name": "Literal",
                                        "src": "359:2:19"
                                      }
                                    ],
                                    "id": 5754,
                                    "name": "BinaryOperation",
                                    "src": "353:8:19"
                                  }
                                ],
                                "id": 5755,
                                "name": "TupleExpression",
                                "src": "352:10:19"
                              }
                            ],
                            "id": 5756,
                            "name": "BinaryOperation",
                            "src": "344:18:19"
                          }
                        ],
                        "id": 5757,
                        "name": "FunctionCall",
                        "src": "326:37:19"
                      }
                    ],
                    "id": 5758,
                    "name": "ExpressionStatement",
                    "src": "326:37:19"
                  }
                ],
                "id": 5759,
                "name": "Block",
                "src": "316:54:19"
              }
            ],
            "id": 5760,
            "name": "FunctionDefinition",
            "src": "291:79:19"
          }
        ],
        "id": 5761,
        "name": "ContractDefinition",
        "src": "90:283:19"
      }
    ],
    "id": 5762,
    "name": "SourceUnit",
    "src": "33:340:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-11-11T08:48:33.267Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}